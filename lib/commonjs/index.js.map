{"version":3,"names":["_reactNative","require","AliOss","NativeModules","subscription","conf","maxRetryCount","timeoutIntervalForRequest","timeoutIntervalForResource","imageXOssProcess","partSize","mulitpartUploadConfig","appendOptions","appendPosition","contentType","contentMd5","contentEncoding","contentDisposition","AliyunOSS","exports","enableDevMode","initWithPlainTextAccessKey","accessKey","secretKey","endPoint","configuration","initWithImplementedSigner","signature","initWithSecurityToken","securityToken","initWithServerSTS","server","asyncUpload","bucketName","objectKey","filepath","options","asyncResumableUpload","asyncAppendObject","initMultipartUpload","multipartUpload","uploadId","listParts","abortMultipartUpload","asyncDownload","asyncListBuckets","asyncHeadObject","asyncListObjects","asyncCopyObject","srcBucketName","srcObjectKey","desBucketName","destObjectKey","doesObjectExist","asyncDeleteObject","asyncCreateBucket","acl","region","asyncGetBucketACL","asyncDeleteBucket","addEventListener","event","callback","RNAliyunEmitter","Platform","OS","NativeEventEmitter","DeviceEventEmitter","addListener","e","removeEventListener","remove"],"sources":["index.tsx"],"sourcesContent":["import {\n  DeviceEventEmitter,\n  NativeEventEmitter,\n  NativeModules,\n  Platform,\n  EmitterSubscription,\n} from 'react-native';\n\nconst { AliOss } = NativeModules;\n\nlet subscription: EmitterSubscription;\n\ntype OSSinit = {\n  maxRetryCount: number;\n  timeoutIntervalForRequest: number;\n  timeoutIntervalForResource: number;\n};\n\ntype OssListOptions = {\n  prefix: string;\n  marker?: string;\n  maxKeys?: string;\n  delimiter?: string;\n};\n\n//default configuration for OSS Client\nconst conf: OSSinit = {\n  maxRetryCount: 3,\n  timeoutIntervalForRequest: 30,\n  timeoutIntervalForResource: 24 * 60 * 60,\n};\n\nconst imageXOssProcess = {\n  'x-oss-process': '',\n};\n\nlet partSize = 128 * 1024;\nconst mulitpartUploadConfig = {\n  partSize: partSize,\n};\ntype AppendType = {\n  appendPosition: number;\n  contentType: string;\n  contentMd5: string;\n  contentEncoding: string;\n  contentDisposition: string;\n};\n\n//appendObject\nconst appendOptions: AppendType = {\n  appendPosition: 0,\n  contentType: '',\n  contentMd5: '',\n  contentEncoding: '',\n  contentDisposition: '',\n};\n\nconst AliyunOSS = {\n  //Enable dev mode\n  enableDevMode() {\n    AliOss.enableDevMode();\n  },\n\n  /**\n   * Initialize the OSS Client\n   * Mode: PlainTextAKSK\n   */\n  initWithPlainTextAccessKey(\n    accessKey: string,\n    secretKey: string,\n    endPoint: string,\n    configuration = conf\n  ) {\n    AliOss.initWithPlainTextAccessKey(\n      accessKey,\n      secretKey,\n      endPoint,\n      configuration\n    );\n  },\n\n  /**\n   * Initialize the OSS Client\n   * Mode: ImplementedSigner\n   */\n  initWithImplementedSigner(\n    signature: string,\n    accessKey: string,\n    endPoint: string,\n    configuration = conf\n  ) {\n    AliOss.initWithImplementedSigner(\n      signature,\n      accessKey,\n      endPoint,\n      configuration\n    );\n  },\n\n  /**\n   * Initialize the OSS Client\n   * Mode: SecurityToken (STS)\n   */\n  initWithSecurityToken(\n    securityToken: string,\n    accessKey: string,\n    secretKey: string,\n    endPoint: string,\n    configuration = conf\n  ) {\n    AliOss.initWithSecurityToken(\n      securityToken,\n      accessKey,\n      secretKey,\n      endPoint,\n      configuration\n    );\n  },\n\n  /**\n   * Initialize the OSS Client\n   * Server STS\n   */\n  initWithServerSTS(server: string, endPoint: string, configuration = conf) {\n    AliOss.initWithServerSTS(server, endPoint, configuration);\n  },\n\n  /**\n   * Asynchronously uploading\n   */\n  asyncUpload(\n    bucketName: string,\n    objectKey: string,\n    filepath: string,\n    options = {}\n  ): Promise<any> {\n    return AliOss.asyncUpload(bucketName, objectKey, filepath, options);\n  },\n\n  /**\n   * Asynchronously\n   */\n  asyncResumableUpload(\n    bucketName: string,\n    objectKey: string,\n    filepath = '',\n    options = {}\n  ): Promise<any> {\n    return AliOss.asyncResumableUpload(\n      bucketName,\n      objectKey,\n      filepath,\n      options\n    );\n  },\n\n  /**\n   * Asynchronously asyncAppendObject\n   */\n  asyncAppendObject(\n    bucketName: string,\n    objectKey: string,\n    filepath: string,\n    options = appendOptions\n  ): Promise<any> {\n    return AliOss.asyncAppendObject(bucketName, objectKey, filepath, options);\n  },\n\n  /**\n   * Asynchronously\n   */\n  initMultipartUpload(bucketName: string, objectKey: string): Promise<any> {\n    return AliOss.initMultipartUpload(bucketName, objectKey);\n  },\n\n  /**\n   * Asynchronously multipartUpload\n   */\n  multipartUpload(\n    bucketName: string,\n    objectKey: string,\n    uploadId: string,\n    filepath = '',\n    options = mulitpartUploadConfig\n  ): Promise<any> {\n    return AliOss.multipartUpload(\n      bucketName,\n      objectKey,\n      uploadId,\n      filepath,\n      options\n    );\n  },\n\n  /**\n   * Asynchronously listParts\n   */\n  listParts(\n    bucketName: string,\n    objectKey: string,\n    uploadId: string\n  ): Promise<any> {\n    return AliOss.listParts(bucketName, objectKey, uploadId);\n  },\n  /**\n   * Asynchronously abortMultipartUpload\n   */\n  abortMultipartUpload(\n    bucketName: string,\n    objectKey: string,\n    uploadId: string\n  ): Promise<any> {\n    return AliOss.abortMultipartUpload(bucketName, objectKey, uploadId);\n  },\n\n  /**\n   * Asynchronously downloading\n   */\n  asyncDownload(\n    bucketName: string,\n    objectKey: string,\n    filepath = '',\n    options = imageXOssProcess\n  ): Promise<any> {\n    return AliOss.asyncDownload(bucketName, objectKey, filepath, options);\n  },\n\n  /*\n    asyncListBuckets\n    */\n\n  asyncListBuckets(): Promise<any> {\n    return AliOss.asyncListBuckets();\n  },\n\n  /**\n   * Asynchronously getHeadObject\n   */\n\n  asyncHeadObject(bucketName: string, objectKey: string): Promise<any> {\n    return AliOss.asyncHeadObject(bucketName, objectKey);\n  },\n\n  /**\n   * Asynchronously getAsyncObjects\n   */\n\n  asyncListObjects(bucketName: string, options?: OssListOptions): Promise<any> {\n    return AliOss.asyncListObjects(bucketName, options);\n  },\n\n  /**\n   * Asynchronously asyncCopyObject\n   */\n\n  asyncCopyObject(\n    srcBucketName: string,\n    srcObjectKey: string,\n    desBucketName: string,\n    destObjectKey: string,\n    options: any\n  ): Promise<any> {\n    return AliOss.asyncCopyObject(\n      srcBucketName,\n      srcObjectKey,\n      desBucketName,\n      destObjectKey,\n      options\n    );\n  },\n\n  /**\n   * Asynchronously doesObjectExist\n   */\n\n  doesObjectExist(bucketName: string, objectKey: string): Promise<any> {\n    return AliOss.doesObjectExist(bucketName, objectKey);\n  },\n\n  /**\n   * Asynchronously asyncDeleteObject\n   */\n\n  asyncDeleteObject(bucketName: string, objectKey: string): Promise<any> {\n    return AliOss.asyncDeleteObject(bucketName, objectKey);\n  },\n\n  /**\n   * Asynchronously createBucket\n   */\n  asyncCreateBucket(\n    bucketName: string,\n    acl = 'private',\n    region: string\n  ): Promise<any> {\n    return AliOss.asyncCreateBucket(bucketName, acl, region);\n  },\n\n  /**\n   * Asynchronously getBucketACL\n   */\n  asyncGetBucketACL(bucketName: string): Promise<any> {\n    return AliOss.asyncGetBucketACL(bucketName);\n  },\n\n  /**\n   * Asynchronously deleteBucket\n   */\n  asyncDeleteBucket(bucketName: string): Promise<any> {\n    return AliOss.asyncDeleteBucket(bucketName);\n  },\n\n  /**\n   * event listener for native upload/download event\n   * @param event one of 'uploadProgress' or 'downloadProgress'\n   * @param callback a callback function accepts one params: event\n   */\n  addEventListener(event: any, callback: any) {\n    const RNAliyunEmitter =\n      Platform.OS === 'ios'\n        ? new NativeEventEmitter(AliOss)\n        : DeviceEventEmitter;\n    switch (event) {\n      case 'uploadProgress':\n        subscription = RNAliyunEmitter.addListener('uploadProgress', (e) =>\n          callback(e)\n        );\n        break;\n      case 'downloadProgress':\n        subscription = RNAliyunEmitter.addListener('downloadProgress', (e) =>\n          callback(e)\n        );\n        break;\n      default:\n        break;\n    }\n  },\n\n  /**\n   * remove event listener for native upload/download event\n   * @param event one of 'uploadProgress' or 'downloadProgress'\n   */\n  removeEventListener(event: any) {\n    switch (event) {\n      case 'uploadProgress':\n        subscription.remove();\n        break;\n      case 'downloadProgress':\n        subscription.remove();\n        break;\n      default:\n        break;\n    }\n  },\n};\nexport { AliyunOSS };\n"],"mappings":"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","ignoreList":[]}